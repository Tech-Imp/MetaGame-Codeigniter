// Generated by CoffeeScript 1.7.1
(function() {
  var commonShared,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  commonShared = (function() {
    commonShared.prototype.debug = true;

    function commonShared() {
      this.getData = __bind(this.getData, this);
      this.determineLoad = __bind(this.determineLoad, this);
      this.changePage = __bind(this.changePage, this);
      this.whichDatabase = __bind(this.whichDatabase, this);
      this.setupEvents = __bind(this.setupEvents, this);
      if (this.debug) {
        console.log("commonShared.constructor");
      }
      this.setupEvents();
    }

    commonShared.prototype.setupEvents = function() {
      if (this.debug) {
        console.log("commonShared.setupEvents");
      }
      $(".nextPage").unbind().bind("click", (function(_this) {
        return function(event) {
          var store;
          if (!($(event.currentTarget).parent().hasClass("disabled"))) {
            store = _this.whichDatabase($(event.currentTarget), $(event.currentTarget).attr("data-loc"), $(event.currentTarget).attr("data-type"));
            console.log(store);
            if (store !== false) {
              return _this.changePage(store, "next");
            }
          }
        };
      })(this));
      return $(".prevPage").unbind().bind("click", (function(_this) {
        return function(event) {
          var store;
          if (!($(event.currentTarget).parent().hasClass("disabled"))) {
            store = _this.whichDatabase($(event.currentTarget), $(event.currentTarget).attr("data-loc"), $(event.currentTarget).attr("data-type"));
            console.log(store);
            if (store !== false) {
              return _this.changePage(store, "prev");
            }
          }
        };
      })(this));
    };

    commonShared.prototype.whichDatabase = function(target, offset, selector) {
      var here, location;
      if (this.debug) {
        console.log("commonShared.whichDatabase");
      }
      here = window.location.pathname;
      console.log(here);
      switch (here) {
        case "/main/photos":
          location = {
            orig: target.parents("div.tab-pane"),
            name: "image",
            offset: offset,
            type: selector
          };
          return location;
        case "/main/video":
          location = {
            orig: target.parents("div.tab-pane"),
            name: "video",
            offset: offset,
            type: selector
          };
          return location;
        case "/main/news":
          location = {
            orig: $("#mediaDatabase"),
            name: "news",
            offset: offset,
            type: selector
          };
          return location;
        default:
          return false;
      }
    };

    commonShared.prototype.changePage = function(database, direction) {
      var location;
      if (database == null) {
        database = false;
      }
      if (direction == null) {
        direction = "next";
      }
      if (this.debug) {
        console.log("commonShared.changePage");
      }
      location = direction + "Page";
      if (database !== false) {
        return $.ajax({
          url: window.location.origin + "/paging/" + location,
          type: 'post',
          dataType: 'json',
          data: {
            offset: database.offset,
            database: database.name,
            type: database.type
          },
          success: (function(_this) {
            return function(response) {
              if (response.success) {
                database.orig.html(response.success);
                return _this.setupEvents();
              }
            };
          })(this)
        });
      }
    };

    commonShared.prototype.determineLoad = function() {
      if (this.debug) {
        console.log("commonShared.getBooks");
      }
      return $("#bookDatabase").html("");
    };

    commonShared.prototype.getData = function(type) {
      if (type == null) {
        type = "changes";
      }
      if (this.debug) {
        console.log("commonShared.getBooks");
      }
      $("#bookDatabase").html("");
      return $.ajax({
        url: "get/getData",
        type: 'post',
        dataType: 'json',
        data: {
          type: type
        },
        success: (function(_this) {
          return function(response) {
            var book, _i, _len, _ref, _results;
            if (response.success) {
              _ref = response.success;
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                book = _ref[_i];
                _results.push(new window.classes.bookObject(book.uid, book.title, book.auth, book.page, book.cost, book.stock, book.wish, book.img));
              }
              return _results;
            } else if (response.debug) {
              new window.classes.bookObject(123, "20000 Leagues Under the Sea", "Jules Verne", 503, "$20", 13, 0);
              new window.classes.bookObject(456, "The Great Gatsby", "F. Scott Fitzgerald ", 320, "$15", 3, 1);
              new window.classes.bookObject(789, "Animal Farm", "George Orwell", 290, "$25", 1, 1);
              return new window.classes.bookObject(321, "The Hobbit", "J.R.R. Tolkien", 345, "$23", 0, 1);
            } else if (response.error) {
              return $("#bookDatabase").html("No books found.");
            }
          };
        })(this)
      });
    };

    return commonShared;

  })();

  if (window.classes == null) {
    window.classes = {};
  }

  window.classes.commonShared = commonShared;

  if (window.objs == null) {
    window.objs = {};
  }

  $(document).ready(function() {
    return window.objs.commonShared = new commonShared;
  });

}).call(this);
