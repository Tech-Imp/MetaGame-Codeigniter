// Generated by CoffeeScript 1.12.4
(function() {
  var dashboardUpdateContact,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  dashboardUpdateContact = (function(superClass) {
    extend(dashboardUpdateContact, superClass);

    dashboardUpdateContact.prototype.debug = true;

    function dashboardUpdateContact() {
      this.deleteMedia = bind(this.deleteMedia, this);
      this.saveEdits = bind(this.saveEdits, this);
      this.setupEvents = bind(this.setupEvents, this);
      if (this.debug) {
        console.log("dashboardUpdateContact.constructor");
      }
      dashboardUpdateContact.__super__.constructor.call(this);
      this.setupEvents();
    }

    dashboardUpdateContact.prototype.setupEvents = function() {
      if (this.debug) {
        console.log("dashboardUpdateContact.setupEvents");
      }
      $("#mceContact").tinymce({
        script_url: this.base_url + '/assets/scripts/tinymce/tinymce.min.js',
        theme: "modern",
        plugins: ["advlist autolink lists link image charmap print preview anchor", "searchreplace visualblocks code fullscreen", "insertdatetime media table contextmenu paste"],
        toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
      });
      $("#saveEdits").unbind().bind("click", (function(_this) {
        return function(event) {
          return _this.saveEdits();
        };
      })(this));
      return $("#permDelete").unbind().bind("click", (function(_this) {
        return function(event) {
          return _this.deleteMedia();
        };
      })(this));
    };

    dashboardUpdateContact.prototype.saveEdits = function() {
      if (this.debug) {
        console.log("dashboardUpdateContact.saveEdits");
      }
      if ($.trim($("#mceContact").html())) {
        return $.ajax({
          url: this.base_url + "/admin/post/postprofile/editProfile",
          type: 'post',
          dataType: 'json',
          data: {
            profileID: $('#profileID').val(),
            title: $('#contactTitle').val(),
            bodyText: $('#mceContact').html(),
            avatarID: $('#avatarUsed').val(),
            profileName: $('#contactName').val(),
            section: $('#section').val(),
            exFlag: $('#exclusiveFlag').val()
          },
          success: (function(_this) {
            return function(response) {
              if (response.success) {
                return _this.textBodyResponse("Edit saved to database", "#userMessage", false, "#textArea-alert");
              } else if (response.debug) {
                return console.log("debug");
              } else if (response.error) {
                return _this.textBodyResponse(response.error, "#userMessage", true, "#textArea-alert");
              }
            };
          })(this)
        });
      } else {
        return this.textBodyResponse("You need to add something to the body of the article!", "#userMessage", true, "#textArea-alert");
      }
    };

    dashboardUpdateContact.prototype.deleteMedia = function() {
      if (this.debug) {
        console.log("dashboardUpdateContact.deleteMedia");
      }
      return $.ajax({
        url: this.base_url + "/admin/post/postprofile/deleteProfile",
        type: 'post',
        dataType: 'json',
        data: {
          profileID: $('#profileID').val()
        },
        success: (function(_this) {
          return function(response) {
            if (response.success) {
              console.log("Success");
              return location.reload();
            } else if (response.debug) {
              return console.log("debug");
            } else if (response.error) {
              return _this.textBodyResponse(response.error, "#userMessage", true, "#textArea-alert");
            }
          };
        })(this)
      });
    };

    return dashboardUpdateContact;

  })(window.classes.dashboardIndex);

  if (window.classes == null) {
    window.classes = {};
  }

  window.classes.dashboardUpdateContact = dashboardUpdateContact;

  if (window.objs == null) {
    window.objs = {};
  }

  $(document).ready(function() {
    return window.objs.dashboardUpdateContact = new dashboardUpdateContact;
  });

}).call(this);
