// Generated by CoffeeScript 1.12.7
(function() {
  var adminTools,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  adminTools = (function(superClass) {
    extend(adminTools, superClass);

    adminTools.prototype.debug = true;

    function adminTools() {
      this.setVis = bind(this.setVis, this);
      this.addUser = bind(this.addUser, this);
      this.regen = bind(this.regen, this);
      this.saveSection = bind(this.saveSection, this);
      this.setupEvents = bind(this.setupEvents, this);
      if (this.debug) {
        console.log("adminTools.constructor");
      }
      adminTools.__super__.constructor.call(this);
      this.setupEvents();
    }

    adminTools.prototype.setupEvents = function() {
      if (this.debug) {
        console.log("adminTools.setupEvents");
      }
      $("#sectionUsage").tinymce({
        script_url: this.base_url + '/assets/scripts/tinymce/tinymce.min.js',
        theme: "modern",
        plugins: ["advlist autolink lists link image charmap print preview anchor", "searchreplace visualblocks code fullscreen", "insertdatetime media table contextmenu paste"],
        toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image"
      });
      $("#saveNewSection").unbind().bind("click", (function(_this) {
        return function(event) {
          $("#saveNewSection").prop("disabled", "disabled");
          return _this.saveSection();
        };
      })(this));
      $("#saveNewContact").unbind().bind("click", (function(_this) {
        return function(event) {
          $("#saveNewContact").prop("disabled", "disabled");
          return _this.addUser();
        };
      })(this));
      $("#regen").unbind().bind("click", (function(_this) {
        return function(event) {
          $("#regen").prop("disabled", "disabled");
          return _this.regen();
        };
      })(this));
      $("#clearSection").unbind().bind("click", (function(_this) {
        return function(event) {
          return _this.cleanAreas();
        };
      })(this));
      $('#sectionController').keyup(function() {
        var empty;
        empty = false;
        $('.textReq').each(function() {
          if ($(this).val() === '') {
            return empty = true;
          }
        });
        if (empty) {
          console.log("remain locked");
          return $("#saveNewSection").prop("disabled", "disabled");
        } else {
          console.log("open");
          return $("#saveNewSection").prop("disabled", false);
        }
      });
      $(".normVis").unbind().bind("click", (function(_this) {
        return function(event) {
          $(".visAdj").prop("disabled", "disabled");
          return _this.setVis($(event.currentTarget).data("id"), "norm", "Section updated to Norm");
        };
      })(this));
      $(".logVis").unbind().bind("click", (function(_this) {
        return function(event) {
          $(".visAdj").prop("disabled", "disabled");
          return _this.setVis($(event.currentTarget).data("id"), "logged", "Section updated to Logged");
        };
      })(this));
      $(".lockVis").unbind().bind("click", (function(_this) {
        return function(event) {
          $(".visAdj").prop("disabled", "disabled");
          return _this.setVis($(event.currentTarget).data("id"), "locked", "Section locked down");
        };
      })(this));
      return $("#mainMode").unbind().bind("click", (function(_this) {
        return function(event) {
          $("#mainMode").prop("disabled", "disabled");
          return _this.setVis(0, "maintenance", "Maintenance mode has been activated");
        };
      })(this));
    };

    adminTools.prototype.saveSection = function() {
      if (this.debug) {
        console.log("adminTools.saveSection");
      }
      if ($.trim($("#sectionUsage").html())) {
        return $.ajax({
          url: this.base_url + "/admin/securepost/addSection",
          type: 'post',
          dataType: 'json',
          data: {
            section: $('#secName').val(),
            usage: $('#sectionUsage').html(),
            sub_dir: $('#secDir').val(),
            visibility: $("#linkVis").val(),
            where: $("#linkLoc").val()
          },
          success: (function(_this) {
            return function(response) {
              if (response.success) {
                console.log("Success");
                _this.cleanAreas();
                return _this.textBodyResponse("Section added to the database", "#sectionMessage", false, "#sectionArea-alert", "#saveNewSection");
              } else if (response.debug) {
                console.log("debug");
                return $("#saveNewContact").prop("disabled", false);
              } else if (response.error) {
                console.log("error");
                return _this.textBodyResponse(response.error, "#sectionMessage", true, "#sectionArea-alert", "#saveNewSection");
              }
            };
          })(this)
        });
      } else {
        return this.textBodyResponse("You need fill in all the fields!", "#sectionMessage", true, "#sectionArea-alert", "#saveNewSection");
      }
    };

    adminTools.prototype.regen = function() {
      if (this.debug) {
        console.log("adminTools.regen");
      }
      return $.ajax({
        url: this.base_url + "/admin/securepost/regenerateSections",
        type: 'post',
        dataType: 'json',
        success: (function(_this) {
          return function(response) {
            if (response.success) {
              console.log("Success");
              _this.cleanAreas();
              return _this.textBodyResponse(response.success, "#visMessage", false, "#visArea-alert", "#regen");
            } else if (response.debug) {
              console.log("debug");
              return $("#regen").prop("disabled", false);
            } else if (response.error) {
              console.log("error");
              return _this.textBodyResponse(response.error, "#visMessage", true, "#visArea-alert", "#regen");
            }
          };
        })(this)
      });
    };

    adminTools.prototype.addUser = function() {
      if (this.debug) {
        console.log("adminTools.addUser");
      }
      return $.ajax({
        url: this.base_url + "/admin/securepost/addUserToSection",
        type: 'post',
        dataType: 'json',
        data: {
          section: $('#addToSection').val(),
          user: $('#addPerson').val()
        },
        success: (function(_this) {
          return function(response) {
            if (response.success) {
              console.log("Success");
              _this.cleanAreas();
              return _this.textBodyResponse("User/Section association added to the database", "#roleMessage", false, "#roleArea-alert", "#saveNewContact");
            } else if (response.debug) {
              console.log("debug");
              return $("#saveNewContact").prop("disabled", false);
            } else if (response.error) {
              console.log("error");
              return _this.textBodyResponse(response.error, "#roleMessage", true, "#roleArea-alert", "#saveNewContact");
            }
          };
        })(this)
      });
    };

    adminTools.prototype.setVis = function(sectId, typeSet, message) {
      var buttonRelease, using;
      if (this.debug) {
        console.log("adminTools.setVis");
      }
      switch (typeSet) {
        case "norm":
          using = this.base_url + "/admin/securepost/setSectionNorm";
          break;
        case "logged":
          using = this.base_url + "/admin/securepost/setSectionLogged";
          break;
        case "locked":
          using = this.base_url + "/admin/securepost/setSectionLocked";
          break;
        case "maintenance":
          using = this.base_url + "/admin/securepost/setMaintenance";
          break;
        default:
          using = this.base_url + "/admin/securepost/setSectionLocked";
      }
      buttonRelease = [".visAdj", "#mainMode"];
      return $.ajax({
        url: using,
        type: 'post',
        dataType: 'json',
        data: {
          section: sectId
        },
        success: (function(_this) {
          return function(response) {
            if (response.success) {
              return _this.textBodyResponse(message, "#visMessage", false, "#visArea-alert", buttonRelease);
            } else if (response.error) {
              console.log("error");
              return _this.textBodyResponse(response.error, "#visMessage", true, "#visArea-alert", buttonRelease);
            }
          };
        })(this)
      });
    };

    return adminTools;

  })(window.classes.dashboardIndex);

  if (window.classes == null) {
    window.classes = {};
  }

  window.classes.adminTools = adminTools;

  if (window.objs == null) {
    window.objs = {};
  }

  $(document).ready(function() {
    return window.objs.adminTools = new adminTools;
  });

}).call(this);
